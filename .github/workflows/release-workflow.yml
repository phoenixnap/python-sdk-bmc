name: Release workflow

on:
  release:
    types: [published]

jobs:
  lint-bmcapi:
    name: Lint BMC API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_bmc_api

  lint-ipapi:
    name: Lint IP API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_ip_api

  lint-auditapi:
    name: Lint Audit API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_audit_api

  lint-networkapi:
    name: Lint Network API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_network_api

  lint-ranchersolutionapi:
    name: Lint Rancher Solution API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_rancher_solution_api

  lint-tagapi:
    name: Lint Tag API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_tag_api

  lint-networkstorageapi:
    name: Lint Network Storage API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          package-name: pnap_network_storage_api

  test-bmcapi:
    name: Test BMC API
    runs-on: ubuntu-latest
    needs:
      - lint-bmcapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_bmc_api
          test-dir: tests
          test-file: pnap_bmc_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-ipapi:
    name: Test IP API
    runs-on: ubuntu-latest
    needs:
      - lint-ipapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_ip_api
          test-dir: tests
          test-file: pnap_ip_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-auditapi:
    name: Test Audit API
    runs-on: ubuntu-latest
    needs:
      - lint-auditapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_audit_api
          test-dir: tests
          test-file: pnap_audit_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-networkapi:
    name: Test Network API
    runs-on: ubuntu-latest
    needs:
      - lint-networkapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_network_api
          test-dir: tests
          test-file: pnap_network_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-ranchersolutionapi:
    name: Test Rancher Solution API
    runs-on: ubuntu-latest
    needs:
      - lint-ranchersolutionapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_rancher_solution_api
          test-dir: tests
          test-file: pnap_rancher_solution_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-tagapi:
    name: Test Tag API
    runs-on: ubuntu-latest
    needs:
      - lint-tagapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_tag_api
          test-dir: tests
          test-file: pnap_tag_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  test-networkstorageapi:
    name: Test Network Storage API
    runs-on: ubuntu-latest
    needs:
      - lint-networkstorageapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.11' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          package-under-test: ./pnap_network_storage_api
          test-dir: tests
          test-file: pnap_network_storage_api_test.py
          test-report-dir: tests/test-reports
          python-version: ${{ matrix.python-version }}

  check-release:
    needs:
      - test-bmcapi
      - test-ipapi
      - test-auditapi
      - test-networkapi
      - test-ranchersolutionapi
      - test-tagapi
      - test-networkstorageapi
    name: Check Release
    runs-on: ubuntu-latest
    outputs:
      package: ${{ steps.step1.outputs.package }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Determining release type
        id: step1
        run: |
          TAG=${{ github.ref }}
          IFS='/' read -r -a array <<< "${TAG#refs/*/}"
          if [ "${#array[@]}" -eq "2" ]; then
              PACKAGE=${array[0]}
              VERSION=${array[1]}
              echo Is subpackage release. Publishing $PACKAGE $VERSION to registry.
              echo "::set-output name=package::$PACKAGE"
          else
              echo Is main release. Skipping.
          fi

  publish-package:
    name: Publish to Python Package Index
    if: needs.check-release.outputs.package != 0
    runs-on: ubuntu-latest
    needs: check-release
    steps:
      - uses: actions/checkout@v3
        with:
            ref: ${{ github.ref }}
      - name: "Install Python and Dependencies"
        run: |
          sudo apt-get install python3-dev
          pip install twine
          pip install --requirement ${{ needs.check-release.outputs.package }}/requirements.txt
        
      - name: "Build Package"
        run: |
          cd ${{ needs.check-release.outputs.package }}
          python setup.py sdist bdist_wheel
      - name: "Publish Package"
        run: |
          cd ${{ needs.check-release.outputs.package }}
          twine upload dist/* -u __token__ -p ${{ secrets.PYPI_API_KEY }}
